apply plugin: 'spring-boot'
apply plugin: 'java'
apply plugin: 'checkstyle'
apply plugin: 'cobertura'

build {
    dependsOn tasks.check
    dependsOn tasks.coberturaCheck
}

ext {
    publicDir = 'src/main/resources/public'
}

repositories {
    mavenCentral()
}

jar {
    baseName = 'backend'
    version = '0.0.1-SNAPSHOT'
}

sourceSets {
    integTest {
        java {
            srcDir 'src/integTest/java'
        }
        resources {
            srcDir 'src/integTest/resources'
        }
    }
}

dependencies {
    compile(
            "org.springframework.boot:spring-boot-starter-web:1.2.3.RELEASE",
            'com.google.guava:guava:18.0',
            'com.jayway.restassured:rest-assured:2.4.1',
            'org.springframework.boot:spring-boot-starter-security',
            'net.sf.ehcache:ehcache-core:2.6.9',
            'org.json:json:20140107'
    )

    testCompile(
            "org.springframework.boot:spring-boot-starter-test:1.2.3.RELEASE",
            'com.jayway.jsonpath:json-path-assert:2.0.0'
    )

    integTestCompile sourceSets.main.output
    integTestCompile configurations.testCompile
}

cobertura {
    coverageFormats = ['html']
    coverageEncoding = 'UTF-8'
    coverageExcludes = ['.*com.thoughtworks.fam.configuration.*']
    coverageIgnoreMethodAnnotations = []
    coverageCheckBranchRate = 80
    coverageCheckLineRate = 80
    coverageCheckPackageBranchRate = 80
    coverageCheckPackageLineRate = 80
    coverageCheckTotalBranchRate = 80
    coverageCheckTotalLineRate = 80
    coverageIgnoreTrivial = true
    //TODO temp disable test coverage
    coverageCheckHaltOnFailure = false
}

task cleanPublic << {
    delete publicDir
}

clean.dependsOn cleanPublic

task copyPublic(type: Copy, dependsOn: [':front-end:build', cleanPublic]) {
    from project(':front-end').file('public')
    into publicDir
}

task copyPublicWithoutBuild(type: Copy, dependsOn: cleanPublic) {
    from project(':front-end').file('public')
    into publicDir
}

task integTest(type: Test) {
    testClassesDir = sourceSets.integTest.output.classesDir
    classpath = sourceSets.integTest.runtimeClasspath
}

check.dependsOn integTest
checkstyle {
    configFile = new File("checkstyle.xml")
}
